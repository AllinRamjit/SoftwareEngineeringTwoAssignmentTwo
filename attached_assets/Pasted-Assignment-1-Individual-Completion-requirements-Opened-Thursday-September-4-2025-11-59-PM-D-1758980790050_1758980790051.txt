Assignment 1 (Individual)
Completion requirements
Opened: Thursday, September 4, 2025, 11:59 PM
Due: Monday, September 29, 2025, 11:59 PM
Description
In this assignment, students shall interpret system requirements to model a solution and implement a command line application. You can implement your own initialization step to populate the system with existing users and state needed to perform the required features.

Project Selection
Refer to this link to see your assigned project.

1. Student Incentive System

Staff and Student system for recording hours of community service/volunteering 

(Staff) Log hours for student

(Student) Request confirmation of hours (by staff)

View Student Leaderboard

(Student) View accolades (10/25/50 hours milestones)

2. Internship Platform

An app for staff to shortlist students to internship opportunities

(Employer) create internship position

(Staff) Add student to an internship positions shortlist

(Employer) accept/reject student from shortlist

(Student) view shortlisted positions and employer response


3. Bread Van App

An app for a bread van to notify street when it would be passing through

(Driver) Schedule a drive to a street

(Resident) View inbox for scheduled drives to their street

(Resident) Request a stop

(Resident) View a drivers status and location

4. Rostering App

An app for scheduling and tracking shifts

(Admin) Schedule a staff member shifts for the week

(Staff) View combined roster of all staff

(Staff) Time in/Time out at the stat/end of shift

(Admin) View shift report for the week

Modelling & Specification
Based on the features of your selected project create each of the following diagrams:

UML Use Case Diagram: Show all the important user features of the application

Model Diagram

Implementation
Implement your model diagram model and controllers then call them in you cli commands defined wsgi.py from the FLASK MVC template.

Submission
Submit 1 pdf document containing the following:

Cover page Name, ID, Assigned Project

Selected project requirements

Use Case Diagram

Model Diagram

Public github repo (with cli commands documented in a readme.md file)

Marks Breakdown
Feature

Description

Marks

UML Use Case

Shows a reasonable interpretation of the solution
Shows all users classes

Covers all functionality

Shows dependencies between cases

10

Model Diagram

Covers only the entities relevant to the features given

Appropriate relationships between entities

Provides appropriate abstractions for the features given

25

Implementation

Uses the provided flask mvc template

Models reflect the Class diagram spec

MVC architecture upheld

All features are functional on the CLI

65

Total

 	
100